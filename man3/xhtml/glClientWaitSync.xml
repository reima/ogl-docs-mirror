<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glClientWaitSync</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glClientWaitSync"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glClientWaitSync — block and wait for a sync object to become signaled</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0"><tr><td><code class="funcdef">GLenum <b class="fsfunc">glClientWaitSync</b>(</code></td><td>GLsync  </td><td><var class="pdparam">sync</var>, </td></tr><tr><td> </td><td>GLbitfield  </td><td><var class="pdparam">flags</var>, </td></tr><tr><td> </td><td>GLuint64  </td><td><var class="pdparam">timeout</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>sync</code></em></span></dt><dd><p>
                    The sync object whose status to wait on.
                </p></dd><dt><span class="term"><em class="parameter"><code>flags</code></em></span></dt><dd><p>
                    A bitfield controlling the command flushing behavior. <em class="parameter"><code>flags</code></em> may be <code class="constant">GL_SYNC_FLUSH_COMMANDS_BIT</code>.
                </p></dd></dl></div><dt><span class="term"><em class="parameter"><code>timeout</code></em></span></dt><dd><p>
                    The timeout, specified in nanoseconds, for which the implementation should wait for <em class="parameter"><code>sync</code></em> to become signaled.
                </p></dd></div><div class="refsect1" lang="en" xml:lang="en"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glClientWaitSync</code> causes the client to block and wait for the sync object specified by <em class="parameter"><code>sync</code></em> to become signaled. If
            <em class="parameter"><code>sync</code></em> is signaled when <code class="function">glClientWaitSync</code> is called, <code class="function">glClientWaitSync</code> returns immediately, otherwise
            it will block and wait for up to <em class="parameter"><code>timeout</code></em> nanoseconds for <em class="parameter"><code>sync</code></em> to become signaled.
        </p><p>
            The return value is one of four status values:
            </p><div class="itemizedlist"><ul type="disc"><li><p>
                        <code class="constant">GL_ALREADY_SIGNALED</code> indicates that <em class="parameter"><code>sync</code></em> was signaled at the time that <code class="function">glClientWaitSync</code>
                        was called.
                    </p></li><li><p>
                        <code class="constant">GL_TIMEOUT_EXPIRED</code> indicates that at least <em class="parameter"><code>timeout</code></em> nanoseconds passed and <em class="parameter"><code>sync</code></em> did not
                        become signaled.
                    </p></li></ul></div><p>
        </p><p>
            The return value is <code class="constant">GL_FRAMEBUFFER_COMPLETE</code> if the framebuffer bound to <em class="parameter"><code>target</code></em> is complete. Otherwise,
            the return value is determined as follows:
            </p><div class="itemizedlist"><ul type="disc"><li><p>
                        <code class="constant">GL_FRAMEBUFFER_UNDEFINED</code> is returned if <em class="parameter"><code>target</code></em> is the default framebuffer, but the default framebuffer does not exist.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT</code> is returned if any of the framebuffer attachment points are framebuffer incomplete.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</code> is returned if the framebuffer does not have at least one image attached to it.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER</code> is returned if the value of <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>
                         is <code class="constant">GL_NONE</code> for any color attachment point(s) named by <code class="constant">GL_DRAWBUFFERi</code>.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER</code> is returned if <code class="constant">GL_READ_BUFFER</code> is not <code class="constant">GL_NONE</code>
                        and the value of <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code> is <code class="constant">GL_NONE</code> for the color attachment point named
                        by <code class="constant">GL_READ_BUFFER</code>.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_UNSUPPORTED</code> is returned if the combination of internal formats of the attached images violates
                        an implementation-dependent set of restrictions.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE</code> is returned if the value of <code class="constant">GL_RENDERBUFFER_SAMPLES</code> is not the same
                        for all attached renderbuffers; if the value of <code class="constant">GL_TEXTURE_SAMPLES</code> is the not same for all attached textures; or, if the attached
                        images are a mix of renderbuffers and textures, the value of <code class="constant">GL_RENDERBUFFER_SAMPLES</code> does not match the value of
                        <code class="constant">GL_TEXTURE_SAMPLES</code>.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE</code> is also returned if the value of <code class="constant">GL_TEXTURE_FIXED_SAMPLE_LOCATIONS</code> is
                        not the same for all attached textures; or, if the attached images are a mix of renderbuffers and textures, the value of <code class="constant">GL_TEXTURE_FIXED_SAMPLE_LOCATIONS</code>
                        is not <code class="constant">GL_TRUE</code> for all attached textures.
                    </p></li><li><p>
                        <code class="constant">GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS</code> is returned if any framebuffer attachment is layered, and any populated attachment is not layered,
                        or if all populated color attachments are not from textures of the same target.
                    </p></li></ul></div><p>
        </p><p>
            Additionally, if an error occurs, zero is returned.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="notes"></a><h2>Notes</h2><p>
            <code class="function">glCheckFramebufferStatus</code> is available only if the GL version is 3.0 or greater.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not <code class="constant">GL_DRAW_FRAMEBUFFER</code>,
            <code class="constant">GL_READ_FRAMEBUFFER</code> or <code class="constant">GL_FRAMEBUFFER</code>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="seealso"></a><h2>See Also</h2><p>
            <a href="glGenFramebuffers.xml"><span class="citerefentry"><span class="refentrytitle">glGenFramebuffers</span></span></a>,
            <a href="glDeleteFramebuffers.xml"><span class="citerefentry"><span class="refentrytitle">glDeleteFramebuffers</span></span></a>
            <a href="glBindFramebuffer.xml"><span class="citerefentry"><span class="refentrytitle">glBindFramebuffer</span></span></a>
            </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2010 Graham Sellers.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
