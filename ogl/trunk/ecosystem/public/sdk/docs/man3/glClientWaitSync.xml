<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glClientWaitSync">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>2010</year>
                <holder>Khronos Group</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glClientWaitSync</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glClientWaitSync</refname>
        <refpurpose>block and wait for a sync object to become signaled</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>GLenum <function>glClientWaitSync</function></funcdef>
                <paramdef>GLsync <parameter>sync</parameter></paramdef>
                <paramdef>GLbitfield <parameter>flags</parameter></paramdef>
                <paramdef>GLuint64 <parameter>timeout</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>sync</parameter></term>
            <listitem>
                <para>
                    The sync object whose status to wait on.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>flags</parameter></term>
            <listitem>
                <para>
                    A bitfield controlling the command flushing behavior. <parameter>flags</parameter> may be <constant>GL_SYNC_FLUSH_COMMANDS_BIT</constant>.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
        <varlistentry>
            <term><parameter>timeout</parameter></term>
            <listitem>
                <para>
                    The timeout, specified in nanoseconds, for which the implementation should wait for <parameter>sync</parameter> to become signaled.
                </para>
            </listitem>
        </varlistentry>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
        <para>
            <function>glClientWaitSync</function> causes the client to block and wait for the sync object specified by <parameter>sync</parameter> to become signaled. If
            <parameter>sync</parameter> is signaled when <function>glClientWaitSync</function> is called, <function>glClientWaitSync</function> returns immediately, otherwise
            it will block and wait for up to <parameter>timeout</parameter> nanoseconds for <parameter>sync</parameter> to become signaled.
        </para>
        <para>
            The return value is one of four status values:
            <itemizedlist>
                <listitem>
                    <para>
                        <constant>GL_ALREADY_SIGNALED</constant> indicates that <parameter>sync</parameter> was signaled at the time that <function>glClientWaitSync</function>
                        was called.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_TIMEOUT_EXPIRED</constant> indicates that at least <parameter>timeout</parameter> nanoseconds passed and <parameter>sync</parameter> did not
                        become signaled.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            The return value is <constant>GL_FRAMEBUFFER_COMPLETE</constant> if the framebuffer bound to <parameter>target</parameter> is complete. Otherwise,
            the return value is determined as follows:
            <itemizedlist>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_UNDEFINED</constant> is returned if <parameter>target</parameter> is the default framebuffer, but the default framebuffer does not exist.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT</constant> is returned if any of the framebuffer attachment points are framebuffer incomplete.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</constant> is returned if the framebuffer does not have at least one image attached to it.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER</constant> is returned if the value of <constant>GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</constant>
                         is <constant>GL_NONE</constant> for any color attachment point(s) named by <constant>GL_DRAWBUFFERi</constant>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER</constant> is returned if <constant>GL_READ_BUFFER</constant> is not <constant>GL_NONE</constant>
                        and the value of <constant>GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</constant> is <constant>GL_NONE</constant> for the color attachment point named
                        by <constant>GL_READ_BUFFER</constant>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_UNSUPPORTED</constant> is returned if the combination of internal formats of the attached images violates
                        an implementation-dependent set of restrictions.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE</constant> is returned if the value of <constant>GL_RENDERBUFFER_SAMPLES</constant> is not the same
                        for all attached renderbuffers; if the value of <constant>GL_TEXTURE_SAMPLES</constant> is the not same for all attached textures; or, if the attached
                        images are a mix of renderbuffers and textures, the value of <constant>GL_RENDERBUFFER_SAMPLES</constant> does not match the value of
                        <constant>GL_TEXTURE_SAMPLES</constant>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE</constant> is also returned if the value of <constant>GL_TEXTURE_FIXED_SAMPLE_LOCATIONS</constant> is
                        not the same for all attached textures; or, if the attached images are a mix of renderbuffers and textures, the value of <constant>GL_TEXTURE_FIXED_SAMPLE_LOCATIONS</constant>
                        is not <constant>GL_TRUE</constant> for all attached textures.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <constant>GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS</constant> is returned if any framebuffer attachment is layered, and any populated attachment is not layered,
                        or if all populated color attachments are not from textures of the same target.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Additionally, if an error occurs, zero is returned.
        </para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>sync</parameter> is not the name of an existing sync object.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>flags</parameter> contains any bits other than <constant>GL_SYNC_FLUSH_COMMANDS_BIT</constant>.
        </para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glGenFramebuffers</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDeleteFramebuffers</refentrytitle></citerefentry>
            <citerefentry><refentrytitle>glBindFramebuffer</refentrytitle></citerefentry>
            </para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2010 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <ulink url="http://opencontent.org/openpub/">http://opencontent.org/openpub/</ulink>.
        </para>
    </refsect1>
</refentry>
