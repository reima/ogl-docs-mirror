<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glRect</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glRect"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glRect — draw a rectangle</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRectd</b>(</code></td><td><var class="pdparam">x1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">x2</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLdouble  </td><td><var class="pdparam">x1</var>;</td></tr><tr><td> GLdouble  </td><td><var class="pdparam">y1</var>;</td></tr><tr><td> GLdouble  </td><td><var class="pdparam">x2</var>;</td></tr><tr><td> GLdouble  </td><td><var class="pdparam">y2</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRectf</b>(</code></td><td><var class="pdparam">x1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">x2</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLfloat  </td><td><var class="pdparam">x1</var>;</td></tr><tr><td> GLfloat  </td><td><var class="pdparam">y1</var>;</td></tr><tr><td> GLfloat  </td><td><var class="pdparam">x2</var>;</td></tr><tr><td> GLfloat  </td><td><var class="pdparam">y2</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRecti</b>(</code></td><td><var class="pdparam">x1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">x2</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLint  </td><td><var class="pdparam">x1</var>;</td></tr><tr><td> GLint  </td><td><var class="pdparam">y1</var>;</td></tr><tr><td> GLint  </td><td><var class="pdparam">x2</var>;</td></tr><tr><td> GLint  </td><td><var class="pdparam">y2</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRects</b>(</code></td><td><var class="pdparam">x1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">x2</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">y2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLshort  </td><td><var class="pdparam">x1</var>;</td></tr><tr><td> GLshort  </td><td><var class="pdparam">y1</var>;</td></tr><tr><td> GLshort  </td><td><var class="pdparam">x2</var>;</td></tr><tr><td> GLshort  </td><td><var class="pdparam">y2</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4768301"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>x1</code></em>, </span><span class="term"><em class="parameter"><code>y1</code></em></span></dt><dd><p>
                    Specify one vertex of a rectangle.
                </p></dd><dt><span class="term"><em class="parameter"><code>x2</code></em>, </span><span class="term"><em class="parameter"><code>y2</code></em></span></dt><dd><p>
                    Specify the opposite vertex of the rectangle.
                </p></dd></dl></div></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRectdv</b>(</code></td><td><var class="pdparam">v1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">v2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> const GLdouble *  </td><td><var class="pdparam">v1</var>;</td></tr><tr><td> const GLdouble *  </td><td><var class="pdparam">v2</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRectfv</b>(</code></td><td><var class="pdparam">v1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">v2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> const GLfloat *  </td><td><var class="pdparam">v1</var>;</td></tr><tr><td> const GLfloat *  </td><td><var class="pdparam">v2</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRectiv</b>(</code></td><td><var class="pdparam">v1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">v2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> const GLint *  </td><td><var class="pdparam">v1</var>;</td></tr><tr><td> const GLint *  </td><td><var class="pdparam">v2</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glRectsv</b>(</code></td><td><var class="pdparam">v1</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">v2</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> const GLshort *  </td><td><var class="pdparam">v1</var>;</td></tr><tr><td> const GLshort *  </td><td><var class="pdparam">v2</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775040"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>v1</code></em></span></dt><dd><p>
                    Specifies a pointer to one vertex of a rectangle.
                </p></dd><dt><span class="term"><em class="parameter"><code>v2</code></em></span></dt><dd><p>
                    Specifies a pointer to the opposite vertex of the rectangle.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775091"></a><h2>DESCRIPTION</h2><p>
            <code class="function">glRect</code> supports efficient specification of rectangles as two corner points.
            Each
            rectangle command takes four arguments,
            organized either as two consecutive pairs of 
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mfenced open="(" close=")">
                    <mml:mi mathvariant="italic">x</mml:mi>
                    <mml:mi mathvariant="italic">y</mml:mi>
                </mml:mfenced>
            </mml:math>
            coordinates
            or as two pointers to arrays,
            each containing an 
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mfenced open="(" close=")">
                    <mml:mi mathvariant="italic">x</mml:mi>
                    <mml:mi mathvariant="italic">y</mml:mi>
                </mml:mfenced>
            </mml:math>
            pair.
            The resulting rectangle is defined in the 
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mrow>
                    <mml:mi mathvariant="italic">z</mml:mi>
                    <mml:mo>=</mml:mo>
                    <mml:mn>0</mml:mn>
                </mml:mrow>
            </mml:math>
            plane.
        </p><p>
            <code class="function">glRect</code>(<em class="parameter"><code>x1</code></em>, <em class="parameter"><code>y1</code></em>, <em class="parameter"><code>x2</code></em>, <em class="parameter"><code>y2</code></em>)
            is exactly equivalent to the following sequence:
            </p><pre class="programlisting">
glBegin(<code class="constant">GL_POLYGON</code>);
glVertex2(<em class="parameter"><code>x1</code></em>, <em class="parameter"><code>y1</code></em>);
glVertex2(<em class="parameter"><code>x2</code></em>, <em class="parameter"><code>y1</code></em>);
glVertex2(<em class="parameter"><code>x2</code></em>, <em class="parameter"><code>y2</code></em>);
glVertex2(<em class="parameter"><code>x1</code></em>, <em class="parameter"><code>y2</code></em>);
glEnd();
            </pre><p>
            Note that if the second vertex is above and to the right of the first vertex,
            the rectangle is constructed with a counterclockwise winding.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775303"></a><h2>ERRORS</h2><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glRect</code>
            is executed between the execution of <span class="citerefentry"><span class="refentrytitle">glBegin</span></span>
            and the corresponding execution of <span class="citerefentry"><span class="refentrytitle">glEnd</span></span>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775333"></a><h2>SEE ALSO</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glBegin</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glVertex</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775351"></a><h2>COPYRIGHT</h2><p>
            Copyright <span class="trademark"></span>© 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a href="http://oss.sgi.com/projects/FreeB/" target="_top">http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></body></html>
