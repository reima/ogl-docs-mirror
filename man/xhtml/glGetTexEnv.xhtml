<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glGetTexEnv</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glGetTexEnv"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetTexEnv — return texture environment parameters</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glGetTexEnvfv</b>(</code></td><td><var class="pdparam">target</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">pname</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">params</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLenum  </td><td><var class="pdparam">target</var>;</td></tr><tr><td> GLenum  </td><td><var class="pdparam">pname</var>;</td></tr><tr><td> GLfloat *  </td><td><var class="pdparam">params</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glGetTexEnviv</b>(</code></td><td><var class="pdparam">target</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">pname</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">params</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLenum  </td><td><var class="pdparam">target</var>;</td></tr><tr><td> GLenum  </td><td><var class="pdparam">pname</var>;</td></tr><tr><td> GLint *  </td><td><var class="pdparam">params</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4777217"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies a texture environment.
                    May be either <code class="constant">GL_TEXTURE_ENV</code> or <code class="constant">GL_TEXTURE_FILTER_CONTROL</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>
                    Specifies the symbolic name of a texture environment parameter.
                    Accepted values are <code class="constant">GL_TEXTURE_ENV_MODE</code>, <code class="constant">GL_TEXTURE_ENV_COLOR</code>,
                    <code class="constant">GL_TEXTURE_LOD_BIAS</code>,
                    <code class="constant">GL_COMBINE_RGB</code>,
                    <code class="constant">GL_COMBINE_ALPHA</code>,
                    <code class="constant">GL_SOURCE0_RGB</code>,
                    <code class="constant">GL_SOURCE1_RGB</code>,
                    <code class="constant">GL_SOURCE2_RGB</code>,
                    <code class="constant">GL_SOURCE0_ALPHA</code>,
                    <code class="constant">GL_SOURCE1_ALPHA</code>,
                    <code class="constant">GL_SOURCE2_ALPHA</code>,
                    <code class="constant">GL_OPERAND0_RGB</code>,
                    <code class="constant">GL_OPERAND1_RGB</code>,
                    <code class="constant">GL_OPERAND2_RGB</code>,
                    <code class="constant">GL_OPERAND0_ALPHA</code>,
                    <code class="constant">GL_OPERAND1_ALPHA</code>,
                    <code class="constant">GL_OPERAND2_ALPHA</code>,
                    <code class="constant">GL_RGB_SCALE</code>, or
                    <code class="constant">GL_ALPHA_SCALE</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>params</code></em></span></dt><dd><p>
                    Returns the requested data.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4763923"></a><h2>DESCRIPTION</h2><p>
            <code class="function">glGetTexEnv</code> returns in <em class="parameter"><code>params</code></em> selected values of a texture environment that
            was specified with <span class="citerefentry"><span class="refentrytitle">glTexEnv</span></span>.
            <em class="parameter"><code>target</code></em> specifies a texture environment.
        </p><p>
            <em class="parameter"><code>pname</code></em> names a specific texture environment parameter, as follows:
        </p><div class="variablelist"><dl><dt><span class="term"><code class="constant">GL_TEXTURE_ENV_MODE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the single-valued texture environment mode,
                        a symbolic constant. The initial value is <code class="constant">GL_MODULATE</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_ENV_COLOR</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns four integer or floating-point values that are the
                        texture environment color.
                        Integer values,
                        when requested,
                        are linearly mapped from the internal floating-point representation
                        such that 1.0 maps to the most positive representable integer,
                        and 
                        <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                            
                            <mml:mn>-1.0</mml:mn>
                        </mml:math>
                        maps to the most negative representable integer. The initial
                        value is (0, 0, 0, 0).
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_LOD_BIAS</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single floating-point value that is the texture
                        level-of-detail bias.  The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_COMBINE_RGB</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the current
                        RGB combine mode.  The initial value is <code class="constant">GL_MODULATE</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_COMBINE_ALPHA</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the current
                        alpha combine mode.  The initial value is <code class="constant">GL_MODULATE</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SOURCE0_RGB</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner zero's RGB source.  The initial value is <code class="constant">GL_TEXTURE</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SOURCE1_RGB</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner one's RGB source.  The initial value is <code class="constant">GL_PREVIOUS</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SOURCE2_RGB</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner two's RGB source.  The initial value is <code class="constant">GL_CONSTANT</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SOURCE0_ALPHA</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner zero's alpha source.  The initial value is <code class="constant">GL_TEXTURE</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SOURCE1_ALPHA</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner one's alpha source.  The initial value is <code class="constant">GL_PREVIOUS</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SOURCE2_ALPHA</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner two's alpha source.  The initial value is <code class="constant">GL_CONSTANT</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_OPERAND0_RGB</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner zero's RGB operand.  The initial value is <code class="constant">GL_SRC_COLOR</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_OPERAND1_RGB</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner one's RGB operand.  The initial value is <code class="constant">GL_SRC_COLOR</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_OPERAND2_RGB</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner two's RGB operand.  The initial value is <code class="constant">GL_SRC_ALPHA</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_OPERAND0_ALPHA</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner zero's alpha operand.  The initial value is <code class="constant">GL_SRC_ALPHA</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_OPERAND1_ALPHA</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner one's alpha operand.  The initial value is <code class="constant">GL_SRC_ALPHA</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_OPERAND2_ALPHA</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single symbolic constant value representing the texture
                        combiner two's alpha operand.  The initial value is <code class="constant">GL_SRC_ALPHA</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_RGB_SCALE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single floating-point value representing the current RGB
                        texture combiner scaling factor.  The initial value is 1.0.
                    </p></dd><dt><span class="term"><code class="constant">GL_ALPHA_SCALE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns a single floating-point value representing the current alpha
                        texture combiner scaling factor.  The initial value is 1.0.
                    </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4708266"></a><h2>NOTES</h2><p>
            If an error is generated,
            no change is made to the contents of <em class="parameter"><code>params</code></em>.
        </p><p>
            When the <code class="code">ARB_multitexture</code> extension is supported, <code class="function">glGetTexEnv</code> returns
            the texture environment parameters for the active texture unit.
        </p><p>
            <code class="constant">GL_COMBINE_RGB</code>,
            <code class="constant">GL_COMBINE_ALPHA</code>,
            <code class="constant">GL_SOURCE0_RGB</code>,
            <code class="constant">GL_SOURCE1_RGB</code>,
            <code class="constant">GL_SOURCE2_RGB</code>,
            <code class="constant">GL_SOURCE0_ALPHA</code>,
            <code class="constant">GL_SOURCE1_ALPHA</code>,
            <code class="constant">GL_SOURCE2_ALPHA</code>,
            <code class="constant">GL_OPERAND0_RGB</code>,
            <code class="constant">GL_OPERAND1_RGB</code>,
            <code class="constant">GL_OPERAND2_RGB</code>,
            <code class="constant">GL_OPERAND0_ALPHA</code>,
            <code class="constant">GL_OPERAND1_ALPHA</code>,
            <code class="constant">GL_OPERAND2_ALPHA</code>,
            <code class="constant">GL_RGB_SCALE</code>, and
            <code class="constant">GL_ALPHA_SCALE</code> are available only if the GL version is 1.3 or greater.
        </p><p>
            <code class="constant">GL_TEXTURE_FILTER_CONTROL</code>, and <code class="constant">GL_TEXTURE_LOD_BIAS</code> are available
            only if the GL version is 1.4 or greater.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4708387"></a><h2>ERRORS</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> or <em class="parameter"><code>pname</code></em> is not an
            accepted value.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glGetTexEnv</code>
            is executed between the execution of <span class="citerefentry"><span class="refentrytitle">glBegin</span></span>
            and the corresponding execution of <span class="citerefentry"><span class="refentrytitle">glEnd</span></span>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4708437"></a><h2>SEE ALSO</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glActiveTexture</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexEnv</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4708456"></a><h2>COPYRIGHT</h2><p>
            Copyright <span class="trademark"></span>© 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a href="http://oss.sgi.com/projects/FreeB/" target="_top">http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></body></html>
