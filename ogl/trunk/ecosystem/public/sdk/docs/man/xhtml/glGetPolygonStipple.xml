<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glGetPolygonStipple</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glGetPolygonStipple"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetPolygonStipple — return the polygon stipple pattern</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glGetPolygonStipple</b>(</code></td><td><var class="pdparam">pattern</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLubyte *  </td><td><var class="pdparam">pattern</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4781748"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>pattern</code></em></span></dt><dd><p>
                    Returns the stipple pattern. The initial value is all 1's.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4781641"></a><h2>DESCRIPTION</h2><p>
            <code class="function">glGetPolygonStipple</code> returns to <em class="parameter"><code>pattern</code></em> a 
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mrow>
                    <mml:mn>32</mml:mn>
                    <mml:mo>×</mml:mo>
                    <mml:mn>32</mml:mn>
                </mml:mrow>
            </mml:math>
            polygon stipple pattern.
            The pattern is packed into memory as if <span class="citerefentry"><span class="refentrytitle">glReadPixels</span></span>
            with both <span class="emphasis"><em>height</em></span> and <span class="emphasis"><em>width</em></span> of 32,
            <span class="emphasis"><em>type</em></span> of <code class="constant">GL_BITMAP</code>,
            and <span class="emphasis"><em>format</em></span> of <code class="constant">GL_COLOR_INDEX</code> were called,
            and the stipple pattern were stored in an internal 
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mrow>
                    <mml:mn>32</mml:mn>
                    <mml:mo>×</mml:mo>
                    <mml:mn>32</mml:mn>
                </mml:mrow>
            </mml:math>
            color
            index buffer.
            Unlike <span class="citerefentry"><span class="refentrytitle">glReadPixels</span></span>,
            however,
            pixel transfer operations
            (shift, offset, pixel map)
            are not applied to the returned stipple image.
        </p><p>
            If a non-zero named buffer object is bound to the <code class="constant">GL_PIXEL_PACK_BUFFER</code> target 
            (see <span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span>) while a polygon stipple pattern is
            requested, <em class="parameter"><code>pattern</code></em> is treated as a byte offset into the buffer object's data store.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4768375"></a><h2>NOTES</h2><p>
            If an error is generated,
            no change is made to the contents of <em class="parameter"><code>pattern</code></em>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4768393"></a><h2>ERRORS</h2><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_PACK_BUFFER</code> target and the buffer object's data store is currently mapped.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_PACK_BUFFER</code> target and the data would be packed to the buffer 
            object such that the memory writes required would exceed the data store size.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glGetPolygonStipple</code>
            is executed between the execution of <span class="citerefentry"><span class="refentrytitle">glBegin</span></span>
            and the corresponding execution of <span class="citerefentry"><span class="refentrytitle">glEnd</span></span>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4774958"></a><h2>ASSOCIATED GETS</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_PACK_BUFFER_BINDING</code>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4774976"></a><h2>SEE ALSO</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glPixelStore</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPixelTransfer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPolygonStipple</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glReadPixels</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775004"></a><h2>COPYRIGHT</h2><p>
            Copyright <span class="trademark"></span>© 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a href="http://oss.sgi.com/projects/FreeB/" target="_top">http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></body></html>
