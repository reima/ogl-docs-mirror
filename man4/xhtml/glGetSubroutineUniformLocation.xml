<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glGetSubroutineUniformLocation - OpenGL 4 Reference Pages</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glGetSubroutineUniformLocation"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetSubroutineUniformLocation — retrieve the location of a subroutine uniform of a given shader stage within a program</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0"><tr><td><code class="funcdef">GLint <b class="fsfunc">glGetSubroutineUniformLocation</b>(</code></td><td>GLuint  </td><td><var class="pdparam">program</var>, </td></tr><tr><td> </td><td>GLenum  </td><td><var class="pdparam">shadertype</var>, </td></tr><tr><td> </td><td>const GLchar * </td><td><var class="pdparam">name</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>program</code></em></span></dt><dd><p>
                    Specifies the name of the program containing shader stage.
                </p></dd><dt><span class="term"><em class="parameter"><code>shadertype</code></em></span></dt><dd><p>
                    Specifies the shader stage from which to query for subroutine uniform index.
                    <em class="parameter"><code>shadertype</code></em>
                    must be one of <code class="constant">GL_VERTEX_SHADER</code>, <code class="constant">GL_TESS_CONTROL_SHADER</code>,
                    <code class="constant">GL_TESS_EVALUATION_SHADER</code>, <code class="constant">GL_GEOMETRY_SHADER</code> or
                    <code class="constant">GL_FRAGMENT_SHADER</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>name</code></em></span></dt><dd><p>
                    Specifies the name of the subroutine uniform whose index to query.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glGetSubroutineUniformLocation</code> returns the location of the subroutine uniform variable
            <em class="parameter"><code>name</code></em> in the shader stage of type <em class="parameter"><code>shadertype</code></em> attached to
            <em class="parameter"><code>program</code></em>, with behavior otherwise identical to
            <a href="glGetUniformLocation.xml"><span class="citerefentry"><span class="refentrytitle">glGetUniformLocation</span></span></a>.
        </p><p>
            If <em class="parameter"><code>name</code></em> is not the name of a subroutine uniform in the shader stage, -1
            is returned, but no error is generated. If <em class="parameter"><code>name</code></em> is the name of a subroutine uniform in the shader stage,
            a value between zero and the value of <code class="constant">GL_ACTIVE_SUBROUTINE_LOCATIONS</code> minus one will be returned.
            Subroutine locations are assigned using consecutive integers in the range from zero to the value
            of <code class="constant">GL_ACTIVE_SUBROUTINE_LOCATIONS</code> minus one for the shader stage.  For active subroutine uniforms
            declared as arrays, the declared array elements are assigned consecutive locations.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>shadertype</code></em> or <em class="parameter"><code>pname</code></em>
            is not one of the accepted values.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>program</code></em> is not the name of an
            existing program object.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="seealso"></a><h2>See Also</h2><p>
            <a href="glGetProgram.xml"><span class="citerefentry"><span class="refentrytitle">glGetProgram</span></span></a>,
            <a href="glGetActiveSubroutineUniform.xml"><span class="citerefentry"><span class="refentrytitle">glGetActiveSubroutineUniform</span></span></a>,
            <a href="glGetActiveSubroutineUniformName.xml"><span class="citerefentry"><span class="refentrytitle">glGetActiveSubroutineUniformName</span></span></a>,
            <a href="glGetUniformLocation.xml"><span class="citerefentry"><span class="refentrytitle">glGetUniformLocation</span></span></a>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2010 Khronos Group. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <a href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
