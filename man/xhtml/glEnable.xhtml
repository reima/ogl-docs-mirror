<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glEnable</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glEnable"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glEnable â€” enable or disable server-side GL capabilities</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><p><code class="funcdef"> void <b class="fsfunc">glEnable</b>(</code><var class="pdparam">cap</var><code>)</code>;<br /> GLenum <var class="pdparam">cap</var>;</p></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4777300"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>cap</code></em></span></dt><dd><p>
                    Specifies a symbolic constant indicating a GL capability.
                </p></dd></dl></div></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><p><code class="funcdef"> void <b class="fsfunc">glDisable</b>(</code><var class="pdparam">cap</var><code>)</code>;<br /> GLenum <var class="pdparam">cap</var>;</p></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4777218"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>cap</code></em></span></dt><dd><p>
                    Specifies a symbolic constant indicating a GL capability.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4763792"></a><h2>DESCRIPTION</h2><p>
            <code class="function">glEnable</code> and <span class="citerefentry"><span class="refentrytitle">glDisable</span></span> enable and disable various capabilities.
            Use <span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span> or <span class="citerefentry"><span class="refentrytitle">glGet</span></span> to determine the current setting
            of any capability. The initial value for each capability with the
            exception of <code class="constant">GL_DITHER</code> is <code class="constant">GL_FALSE</code>. The initial value for
            <code class="constant">GL_DITHER</code> is <code class="constant">GL_TRUE</code>.
        </p><p>
            Both <code class="function">glEnable</code> and <span class="citerefentry"><span class="refentrytitle">glDisable</span></span> take a single argument, <em class="parameter"><code>cap</code></em>,
            which can assume one of the following values:
        </p><div class="variablelist"><dl><dt><span class="term"><code class="constant">GL_ALPHA_TEST</code></span></dt><dd><p>
                        If enabled,
                        do alpha testing. See
                        <span class="citerefentry"><span class="refentrytitle">glAlphaFunc</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_AUTO_NORMAL</code></span></dt><dd><p>
                        If enabled,
                        generate normal vectors when either
                        <code class="constant">GL_MAP2_VERTEX_3</code> or
                        <code class="constant">GL_MAP2_VERTEX_4</code> is used to generate vertices.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_BLEND</code></span></dt><dd><p>
                        If enabled,
                        blend the incoming RGBA color values with the values in the color
                        buffers. See <span class="citerefentry"><span class="refentrytitle">glBlendFunc</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_CLIP_PLANE</code><span class="emphasis"><em>i</em></span></span></dt><dd><p>
                        If enabled,
                        clip geometry against user-defined clipping plane <span class="emphasis"><em>i</em></span>.
                        See <span class="citerefentry"><span class="refentrytitle">glClipPlane</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_COLOR_LOGIC_OP</code></span></dt><dd><p>
                        If enabled,
                        apply the currently selected logical operation to the incoming RGBA
                        color and color buffer values. See <span class="citerefentry"><span class="refentrytitle">glLogicOp</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_COLOR_MATERIAL</code></span></dt><dd><p>
                        If enabled,
                        have one or more material parameters track the current color.
                        See <span class="citerefentry"><span class="refentrytitle">glColorMaterial</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_COLOR_SUM</code></span></dt><dd><p>
                        If enabled, add the secondary color value to the computed fragment color.
                        See <span class="citerefentry"><span class="refentrytitle">glSecondaryColor</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_COLOR_TABLE</code></span></dt><dd><p>
                        If enabled,
                        perform a color table lookup on the incoming RGBA color values.
                        See <span class="citerefentry"><span class="refentrytitle">glColorTable</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_CONVOLUTION_1D</code></span></dt><dd><p>
                        If enabled,
                        perform a 1D convolution operation on incoming RGBA color values.
                        See <span class="citerefentry"><span class="refentrytitle">glConvolutionFilter1D</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_CONVOLUTION_2D</code></span></dt><dd><p>
                        If enabled,
                        perform a 2D convolution operation on incoming RGBA color values.
                        See <span class="citerefentry"><span class="refentrytitle">glConvolutionFilter2D</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_CULL_FACE</code></span></dt><dd><p>
                        If enabled,
                        cull polygons based on their winding in window coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glCullFace</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_DEPTH_TEST</code></span></dt><dd><p>
                        If enabled,
                        do depth comparisons and update the depth buffer. Note that even if
                        the depth buffer exists and the depth mask is non-zero, the
                        depth buffer is not updated if the depth test is disabled. See
                        <span class="citerefentry"><span class="refentrytitle">glDepthFunc</span></span> and
                        <span class="citerefentry"><span class="refentrytitle">glDepthRange</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_DITHER</code>	</span></dt><dd><p>
                        If enabled,
                        dither color components or indices before they are written to the
                        color buffer.
                    </p></dd><dt><span class="term"><code class="constant">GL_FOG</code></span></dt><dd><p>
                        If enabled,
                        blend a fog color into the post-texturing color.
                        See <span class="citerefentry"><span class="refentrytitle">glFog</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_HISTOGRAM</code></span></dt><dd><p>
                        If enabled,
                        histogram incoming RGBA color values.
                        See <span class="citerefentry"><span class="refentrytitle">glHistogram</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_INDEX_LOGIC_OP</code></span></dt><dd><p>
                        If enabled,
                        apply the currently selected logical operation to the incoming index and color
                        buffer indices.
                        See <span class="citerefentry"><span class="refentrytitle">glLogicOp</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_LIGHT</code><span class="emphasis"><em>i</em></span></span></dt><dd><p>
                        If enabled,
                        include light <span class="emphasis"><em>i</em></span> in the evaluation of the lighting
                        equation. See <span class="citerefentry"><span class="refentrytitle">glLightModel</span></span> and <span class="citerefentry"><span class="refentrytitle">glLight</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_LIGHTING</code></span></dt><dd><p>
                        If enabled,
                        use the current lighting parameters to compute the vertex color or index.
                        Otherwise, simply associate the current color or index with each
                        vertex. See
                        <span class="citerefentry"><span class="refentrytitle">glMaterial</span></span>, <span class="citerefentry"><span class="refentrytitle">glLightModel</span></span>, and <span class="citerefentry"><span class="refentrytitle">glLight</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_LINE_SMOOTH</code></span></dt><dd><p>
                        If enabled,
                        draw lines with correct filtering.
                        Otherwise,
                        draw aliased lines.
                        See <span class="citerefentry"><span class="refentrytitle">glLineWidth</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_LINE_STIPPLE</code></span></dt><dd><p>
                        If enabled,
                        use the current line stipple pattern when drawing lines. See
                        <span class="citerefentry"><span class="refentrytitle">glLineStipple</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_COLOR_4</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate RGBA values.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_INDEX</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate color indices.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_NORMAL</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate normals.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_1</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate
                        <span class="emphasis"><em>s</em></span>
                        texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_2</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate
                        <span class="emphasis"><em>s</em></span> and
                        <span class="emphasis"><em>t</em></span> texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_3</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate
                        <span class="emphasis"><em>s</em></span>,
                        <span class="emphasis"><em>t</em></span>, and
                        <span class="emphasis"><em>r</em></span> texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_4</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate
                        <span class="emphasis"><em>s</em></span>,
                        <span class="emphasis"><em>t</em></span>,
                        <span class="emphasis"><em>r</em></span>, and
                        <span class="emphasis"><em>q</em></span> texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_VERTEX_3</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate
                        <span class="emphasis"><em>x</em></span>, <span class="emphasis"><em>y</em></span>, and <span class="emphasis"><em>z</em></span> vertex coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_VERTEX_4</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh1</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint1</span></span> generate
                        homogeneous
                        <span class="emphasis"><em>x</em></span>,
                        <span class="emphasis"><em>y</em></span>,
                        <span class="emphasis"><em>z</em></span>, and
                        <span class="emphasis"><em>w</em></span> vertex coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_COLOR_4</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate RGBA values.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_INDEX</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate color indices.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_NORMAL</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate normals.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_TEXTURE_COORD_1</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate
                        <span class="emphasis"><em>s</em></span>
                        texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_TEXTURE_COORD_2</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate
                        <span class="emphasis"><em>s</em></span> and
                        <span class="emphasis"><em>t</em></span> texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_TEXTURE_COORD_3</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate
                        <span class="emphasis"><em>s</em></span>,
                        <span class="emphasis"><em>t</em></span>, and
                        <span class="emphasis"><em>r</em></span> texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_TEXTURE_COORD_4</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate
                        <span class="emphasis"><em>s</em></span>,
                        <span class="emphasis"><em>t</em></span>,
                        <span class="emphasis"><em>r</em></span>, and
                        <span class="emphasis"><em>q</em></span> texture coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_VERTEX_3</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate
                        <span class="emphasis"><em>x</em></span>, <span class="emphasis"><em>y</em></span>, and <span class="emphasis"><em>z</em></span> vertex coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP2_VERTEX_4</code></span></dt><dd><p>
                        If enabled,
                        calls to
                        <span class="citerefentry"><span class="refentrytitle">glEvalCoord2</span></span>,
                        <span class="citerefentry"><span class="refentrytitle">glEvalMesh2</span></span>, and
                        <span class="citerefentry"><span class="refentrytitle">glEvalPoint2</span></span> generate
                        homogeneous
                        <span class="emphasis"><em>x</em></span>,
                        <span class="emphasis"><em>y</em></span>,
                        <span class="emphasis"><em>z</em></span>, and
                        <span class="emphasis"><em>w</em></span> vertex coordinates.
                        See <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MINMAX</code></span></dt><dd><p>
                        If enabled,
                        compute the minimum and maximum values of incoming RGBA color values.
                        See <span class="citerefentry"><span class="refentrytitle">glMinmax</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_MULTISAMPLE</code></span></dt><dd><p>
                        If enabled,
                        use multiple fragment samples in computing the final color of a pixel.
                        See <span class="citerefentry"><span class="refentrytitle">glSampleCoverage</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_NORMALIZE</code></span></dt><dd><p>
                        If enabled,
                        normal vectors specified with <span class="citerefentry"><span class="refentrytitle">glNormal</span></span> are scaled to unit length
                        after transformation. See <span class="citerefentry"><span class="refentrytitle">glNormal</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_POINT_SMOOTH</code></span></dt><dd><p>
                        If enabled,
                        draw points with proper filtering.
                        Otherwise,
                        draw aliased points.
                        See <span class="citerefentry"><span class="refentrytitle">glPointSize</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_POLYGON_OFFSET_FILL</code></span></dt><dd><p>
                        If enabled, and if the polygon is rendered in
                        <code class="constant">GL_FILL</code> mode, an offset is added to depth values of a polygon's
                        fragments before the depth comparison is performed.
                        See <span class="citerefentry"><span class="refentrytitle">glPolygonOffset</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_POLYGON_OFFSET_LINE</code></span></dt><dd><p>
                        If enabled, and if the polygon is rendered in
                        <code class="constant">GL_LINE</code> mode, an offset is added to depth values of a polygon's
                        fragments before the depth comparison is performed.
                        See <span class="citerefentry"><span class="refentrytitle">glPolygonOffset</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_POLYGON_OFFSET_POINT</code></span></dt><dd><p>
                        If enabled, an offset is added to depth values of a polygon's fragments
                        before the depth comparison is performed, if the polygon is rendered in
                        <code class="constant">GL_POINT</code> mode. See <span class="citerefentry"><span class="refentrytitle">glPolygonOffset</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_POLYGON_SMOOTH</code></span></dt><dd><p>
                        If enabled, draw polygons with proper filtering.
                        Otherwise, draw aliased polygons. For correct antialiased polygons,
                        an alpha buffer is needed and the polygons must be sorted front to
                        back.
                    </p></dd><dt><span class="term"><code class="constant">GL_POLYGON_STIPPLE</code></span></dt><dd><p>
                        If enabled,
                        use the current polygon stipple pattern when rendering
                        polygons. See <span class="citerefentry"><span class="refentrytitle">glPolygonStipple</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_POST_COLOR_MATRIX_COLOR_TABLE</code></span></dt><dd><p>
                        If enabled,
                        perform a color table lookup on RGBA color values after color matrix
                        transformation.
                        See <span class="citerefentry"><span class="refentrytitle">glColorTable</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_POST_CONVOLUTION_COLOR_TABLE</code></span></dt><dd><p>
                        If enabled,
                        perform a color table lookup on RGBA color values after convolution.
                        See <span class="citerefentry"><span class="refentrytitle">glColorTable</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_RESCALE_NORMAL</code></span></dt><dd><p>
                        If enabled, normal vectors specified with <span class="citerefentry"><span class="refentrytitle">glNormal</span></span> are scaled to
                        unit length after transformation. See <span class="citerefentry"><span class="refentrytitle">glNormal</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SAMPLE_ALPHA_TO_COVERAGE</code></span></dt><dd><p>
                        If enabled,
                        compute a temporary coverage value where each bit is determined by the
                        alpha value at the corresponding sample location.  The temporary coverage
                        value is then ANDed with the fragment coverage value.
                    </p></dd><dt><span class="term"><code class="constant">GL_SAMPLE_ALPHA_TO_ONE</code></span></dt><dd><p>
                        If enabled,
                        each sample alpha value is replaced by the maximum representable alpha value.
                    </p></dd><dt><span class="term"><code class="constant">GL_SAMPLE_COVERAGE</code></span></dt><dd><p>
                        If enabled,
                        the fragment's coverage is ANDed with the temporary coverage value.  If
                        <code class="constant">GL_SAMPLE_COVERAGE_INVERT</code> is set to <code class="constant">GL_TRUE</code>, invert the coverage
                        value.
                        See <span class="citerefentry"><span class="refentrytitle">glSampleCoverage</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SEPARABLE_2D</code></span></dt><dd><p>
                        If enabled, perform a two-dimensional convolution operation using a separable
                        convolution filter on incoming RGBA color values.
                        See <span class="citerefentry"><span class="refentrytitle">glSeparableFilter2D</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_SCISSOR_TEST</code></span></dt><dd><p>
                        If enabled,
                        discard fragments that are outside the scissor rectangle.
                        See <span class="citerefentry"><span class="refentrytitle">glScissor</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_STENCIL_TEST</code></span></dt><dd><p>
                        If enabled,
                        do stencil testing and update the stencil buffer.
                        See <span class="citerefentry"><span class="refentrytitle">glStencilFunc</span></span> and <span class="citerefentry"><span class="refentrytitle">glStencilOp</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_1D</code></span></dt><dd><p>
                        If enabled, one-dimensional texturing is performed
                        (unless two- or three-dimensional texturing is also enabled).
                        See <span class="citerefentry"><span class="refentrytitle">glTexImage1D</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_2D</code></span></dt><dd><p>
                        If enabled, two-dimensional texturing is performed
                        (unless three-dimensional texturing is also enabled).
                        See <span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_3D</code></span></dt><dd><p>
                        If enabled, three-dimensional texturing is performed.
                        See <span class="citerefentry"><span class="refentrytitle">glTexImage3D</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_CUBE_MAP</code></span></dt><dd><p>
                        If enabled, texture coordinates are generated using the cube-mapped texture
                        function.  See <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_GEN_Q</code></span></dt><dd><p>
                        If enabled,
                        the <span class="emphasis"><em>q</em></span> texture coordinate is computed using
                        the texture generation function defined with <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                        Otherwise, the current <span class="emphasis"><em>q</em></span> texture coordinate is used.
                        See <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_GEN_R</code></span></dt><dd><p>
                        If enabled,
                        the <span class="emphasis"><em>r</em></span> texture coordinate is computed using
                        the texture generation function defined with <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                        Otherwise, the current <span class="emphasis"><em>r</em></span> texture coordinate is used.
                        See <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_GEN_S</code></span></dt><dd><p>
                        If enabled,
                        the <span class="emphasis"><em>s</em></span> texture coordinate is computed using
                        the texture generation function defined with <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                        Otherwise, the current <span class="emphasis"><em>s</em></span> texture coordinate is used.
                        See <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                    </p></dd><dt><span class="term"><code class="constant">GL_TEXTURE_GEN_T</code></span></dt><dd><p>
                        If enabled,
                        the <span class="emphasis"><em>t</em></span> texture coordinate is computed using
                        the texture generation function defined with <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                        Otherwise, the current <span class="emphasis"><em>t</em></span> texture coordinate is used.
                        See <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>.
                    </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4780752"></a><h2>NOTES</h2><p>
            <code class="constant">GL_POLYGON_OFFSET_FILL</code>, <code class="constant">GL_POLYGON_OFFSET_LINE</code>,
            <code class="constant">GL_POLYGON_OFFSET_POINT</code>,
            <code class="constant">GL_COLOR_LOGIC_OP</code>, and <code class="constant">GL_INDEX_LOGIC_OP</code> are available
            only if the GL version is 1.1 or greater.
        </p><p>
            <code class="constant">GL_RESCALE_NORMAL</code>, and <code class="constant">GL_TEXTURE_3D</code> are available only if the
            GL version is 1.2 or greater.
        </p><p>
            <code class="constant">GL_MULTISAMPLE</code>,
            <code class="constant">GL_SAMPLE_ALPHA_TO_COVERAGE</code>,
            <code class="constant">GL_SAMPLE_ALPHA_TO_ONE</code>,
            <code class="constant">GL_SAMPLE_COVERAGE</code>,
            <code class="constant">GL_TEXTURE_CUBE_MAP</code>
            are available only if the GL version is 1.3 or greater.
        </p><p>
            <code class="constant">GL_COLOR_TABLE</code>, <code class="constant">GL_CONVOLUTION_1D</code>, <code class="constant">GL_CONVOLUTION_2D</code>,
            <code class="constant">GL_HISTOGRAM</code>, <code class="constant">GL_MINMAX</code>,
            <code class="constant">GL_POST_COLOR_MATRIX_COLOR_TABLE</code>,
            <code class="constant">GL_POST_CONVOLUTION_COLOR_TABLE</code>, and
            <code class="constant">GL_SEPARABLE_2D</code> are available only if <code class="code">ARB_imaging</code> is returned
            from <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with an argument of <code class="constant">GL_EXTENSIONS</code>.
        </p><p>
            If <code class="code">ARB_multitexture</code> is supported, <code class="constant">GL_TEXTURE_1D</code>,
            <code class="constant">GL_TEXTURE_2D</code>, <code class="constant">GL_TEXTURE_3D</code>, <code class="constant">GL_TEXTURE_GEN_S</code>,
            <code class="constant">GL_TEXTURE_GEN_T</code>, <code class="constant">GL_TEXTURE_GEN_R</code>, and <code class="constant">GL_TEXTURE_GEN_Q</code>
            enable or disable the respective state for the active texture unit
            specified with <span class="citerefentry"><span class="refentrytitle">glActiveTexture</span></span>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4780916"></a><h2>ERRORS</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>cap</code></em> is not one of the values
            listed previously.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glEnable</code> or <span class="citerefentry"><span class="refentrytitle">glDisable</span></span>
            is executed between the execution of <span class="citerefentry"><span class="refentrytitle">glBegin</span></span>
            and the corresponding execution of <span class="citerefentry"><span class="refentrytitle">glEnd</span></span>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4780966"></a><h2>SEE ALSO</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glActiveTexture</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glAlphaFunc</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glBlendFunc</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glClipPlane</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glColorMaterial</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCullFace</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glDepthFunc</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glDepthRange</span></span>,
            <code class="function">glEnableClientState</code>,
            <span class="citerefentry"><span class="refentrytitle">glFog</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glLight</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glLightModel</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glLineWidth</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glLineStipple</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glLogicOp</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glMap1</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glMap2</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glMaterial</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glNormal</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPointSize</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPolygonMode</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPolygonOffset</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPolygonStipple</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glScissor</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glStencilFunc</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glStencilOp</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexGen</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage3D</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4781144"></a><h2>COPYRIGHT</h2><p>
            Copyright <span class="trademark"></span>Â© 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a href="http://oss.sgi.com/projects/FreeB/" target="_top">http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></body></html>
