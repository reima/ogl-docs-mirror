<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glStencilOp">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>1991-2006</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glStencilOp</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glStencilOp</refname>
        <refpurpose>set stencil test actions</refpurpose>
    </refnamediv>
    <!-- eqn: ignoring delim $$ -->
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef> void <function>glStencilOp</function></funcdef>
                <paramdef> GLenum <parameter>fail</parameter></paramdef>
                <paramdef> GLenum <parameter>zfail</parameter></paramdef>
                <paramdef> GLenum <parameter>zpass</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1><title>PARAMETERS</title>
        <variablelist>
        <varlistentry>
            <term><parameter>fail</parameter></term>
            <listitem>
                <para>
                    Specifies the action to take when the stencil test fails.
                    Eight symbolic constants are accepted:
                    <constant>GL_KEEP</constant>,
                    <constant>GL_ZERO</constant>,
                    <constant>GL_REPLACE</constant>,
                    <constant>GL_INCR</constant>,
                    <constant>GL_INCR_WRAP</constant>,
                    <constant>GL_DECR</constant>,
                    <constant>GL_DECR_WRAP</constant>, and
                    <constant>GL_INVERT</constant>. The initial value is <constant>GL_KEEP</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>zfail</parameter></term>
            <listitem>
                <para>
                    Specifies the stencil action when the stencil test passes,
                    but the depth test fails.
                    <parameter>zfail</parameter> accepts the same symbolic constants as <parameter>fail</parameter>. The initial value
                    is <constant>GL_KEEP</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>zpass</parameter></term>
            <listitem>
                <para>
                    Specifies the stencil action when both the stencil test and the depth
                    test pass, or when the stencil test passes and either there is no
                    depth buffer or depth testing is not enabled.
                    <parameter>zpass</parameter> accepts the same symbolic constants as <parameter>fail</parameter>. The initial value
                    is <constant>GL_KEEP</constant>.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1><title>DESCRIPTION</title>
        <para>
            Stenciling,
            like depth-buffering,
            enables and disables drawing on a per-pixel basis.
            You draw into the stencil planes using GL drawing primitives,
            then render geometry and images,
            using the stencil planes to mask out portions of the screen.
            Stenciling is typically used in multipass rendering algorithms
            to achieve special effects,
            such as decals,
            outlining,
            and constructive solid geometry rendering.
        </para>
        <para>
            The stencil test conditionally eliminates a pixel based on the outcome
            of a comparison between the value in the stencil buffer and a
            reference value. To enable and disable the test, call <citerefentry><refentrytitle>glEnable</refentrytitle></citerefentry>
            and <citerefentry><refentrytitle>glDisable</refentrytitle></citerefentry> with argument
            <constant>GL_STENCIL_TEST</constant>; to control it, call <citerefentry><refentrytitle>glStencilFunc</refentrytitle></citerefentry>.
        </para>
        <para>
            <function>glStencilOp</function> takes three arguments that indicate what happens
            to the stored stencil value while stenciling is enabled.
            If the stencil test fails,
            no change is made to the pixel's color or depth buffers,
            and <parameter>fail</parameter> specifies what happens to the stencil buffer contents.
            The following eight actions are possible.
        </para>
        <variablelist>
            <varlistentry>
                <term><constant>GL_KEEP</constant></term>
                <listitem>
                    <para>
                        Keeps the current value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_ZERO</constant></term>
                <listitem>
                    <para>
                        Sets the stencil buffer value to 0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_REPLACE</constant></term>
                <listitem>
                    <para>
                        Sets the stencil buffer value to <emphasis>ref</emphasis>,
                        as specified by <citerefentry><refentrytitle>glStencilFunc</refentrytitle></citerefentry>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_INCR</constant></term>
                <listitem>
                    <para>
                        Increments the current stencil buffer value.
                        Clamps to the maximum representable unsigned value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_INCR_WRAP</constant></term>
                <listitem>
                    <para>
                        Increments the current stencil buffer value.
                        Wraps stencil buffer value to zero when incrementing the maximum
                        representable unsigned value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_DECR</constant></term>
                <listitem>
                    <para>
                        Decrements the current stencil buffer value.
                        Clamps to 0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_DECR_WRAP</constant></term>
                <listitem>
                    <para>
                        Decrements the current stencil buffer value.
                        Wraps stencil buffer value to the maximum representable unsigned value when
                        decrementing a stencil buffer value of zero.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_INVERT</constant></term>
                <listitem>
                    <para>
                        Bitwise inverts the current stencil buffer value.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            Stencil buffer values are treated as unsigned integers.
            When incremented and decremented,
            values are clamped to 0 and 
            <inlineequation><mml:math>
                <!-- eqn: 2 sup n - 1:-->
                <mml:mrow>
                    <mml:msup><mml:mn>2</mml:mn>
                    <mml:mi mathvariant="italic">n</mml:mi>
                    </mml:msup>
                    <mml:mo>-</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math></inlineequation>
            ,
            where 
            <inlineequation><mml:math><mml:mi mathvariant="italic">n</mml:mi></mml:math></inlineequation>
            is the value returned by querying <constant>GL_STENCIL_BITS</constant>.
        </para>
        <para>
            The other two arguments to <function>glStencilOp</function> specify stencil buffer actions
            that depend on whether subsequent depth buffer tests succeed (<parameter>zpass</parameter>)
            or fail (<parameter>zfail</parameter>) (see
            <citerefentry><refentrytitle>glDepthFunc</refentrytitle></citerefentry>).
            The actions are specified using the same eight symbolic constants as <parameter>fail</parameter>.
            Note that <parameter>zfail</parameter> is ignored when there is no depth buffer,
            or when the depth buffer is not enabled.
            In these cases, <parameter>fail</parameter> and <parameter>zpass</parameter> specify stencil action when the
            stencil test fails and passes,
            respectively.
        </para>
    </refsect1>
    <refsect1><title>NOTES</title>
        <para>
            <constant>GL_DECR_WRAP</constant> and <constant>GL_INCR_WRAP</constant> are available only if the GL
            version is 1.4 or greater.
        </para>
        <para>
            Initially the stencil test is disabled.
            If there is no stencil buffer,
            no stencil modification can occur
            and it is as if the stencil tests always pass,
            regardless of any call to <function>glStencilOp</function>.
        </para>
    </refsect1>
    <refsect1><title>ERRORS</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>fail</parameter>,
            <parameter>zfail</parameter>, or <parameter>zpass</parameter> is any value other than the eight defined constant values.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <function>glStencilOp</function>
            is executed between the execution of <citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
            and the corresponding execution of <citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.
        </para>
    </refsect1>
    <refsect1><title>ASSOCIATED GETS</title>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_STENCIL_FAIL</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_STENCIL_PASS_DEPTH_PASS</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_STENCIL_PASS_DEPTH_FAIL</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_STENCIL_BITS</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_STENCIL_TEST</constant>
        </para>
    </refsect1>
    <refsect1><title>SEE ALSO</title>
        <para>
            <citerefentry><refentrytitle>glAlphaFunc</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glBlendFunc</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDepthFunc</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glEnable</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glLogicOp</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glStencilFunc</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1><title>COPYRIGHT</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <ulink url="http://oss.sgi.com/projects/FreeB/">http://oss.sgi.com/projects/FreeB/</ulink>.
        </para>
    </refsect1>
</refentry>
