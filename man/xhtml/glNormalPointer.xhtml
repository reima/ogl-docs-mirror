<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glNormalPointer</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glNormalPointer"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glNormalPointer — define an array of normals</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glNormalPointer</b>(</code></td><td><var class="pdparam">type</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">stride</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">ptr</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLenum  </td><td><var class="pdparam">type</var>;</td></tr><tr><td> GLsizei  </td><td><var class="pdparam">stride</var>;</td></tr><tr><td> const GLvoid *  </td><td><var class="pdparam">ptr</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4777320"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>type</code></em></span></dt><dd><p>
                    Specifies the data type of each coordinate in the array.
                    Symbolic constants
                    <code class="constant">GL_BYTE</code>,
                    <code class="constant">GL_SHORT</code>,
                    <code class="constant">GL_INT</code>,
                    <code class="constant">GL_FLOAT</code>, and
                    <code class="constant">GL_DOUBLE</code>
                    are accepted. The initial value is <code class="constant">GL_FLOAT</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>stride</code></em></span></dt><dd><p>
                    Specifies the byte offset between consecutive normals. If <em class="parameter"><code>stride</code></em> is
                    0 - the initial value - the normals are understood to be tightly packed in
                    the array.
                    The initial value is 0.
                </p></dd><dt><span class="term"><em class="parameter"><code>ptr</code></em></span></dt><dd><p>
                    Specifies a pointer to the first coordinate of the first normal in the
                    array.
                    The initial value is 0.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4763830"></a><h2>DESCRIPTION</h2><p>
            <code class="function">glNormalPointer</code> specifies the location and data format of an array of normals
            to use when rendering.
            <em class="parameter"><code>type</code></em> specifies the data type of
            the normal coordinates and <em class="parameter"><code>stride</code></em> gives the byte stride from one
            normal to the next, allowing vertices and attributes
            to be packed into a single array or stored in separate arrays.
            (Single-array storage may be more efficient on some implementations;
            see <span class="citerefentry"><span class="refentrytitle">glInterleavedArrays</span></span>.)
            When a normal array is specified, <em class="parameter"><code>type</code></em>, <em class="parameter"><code>stride</code></em>, and <em class="parameter"><code>ptr</code></em> are
            saved as client-side state.
        </p><p>
            To enable and disable the normal array, call <span class="citerefentry"><span class="refentrytitle">glEnableClientState</span></span> and
            <span class="citerefentry"><span class="refentrytitle">glDisableClientState</span></span> with the argument <code class="constant">GL_NORMAL_ARRAY</code>. If
            enabled, the normal array is used
            when <span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span>, <span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span>, or <span class="citerefentry"><span class="refentrytitle">glArrayElement</span></span> is called.
        </p><p>
            Use <span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span> to construct a sequence of primitives (all of the
            same type) from prespecified vertex and vertex attribute arrays.
            Use <span class="citerefentry"><span class="refentrytitle">glArrayElement</span></span> to specify primitives
            by indexing vertices and vertex attributes and <span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span> to
            construct a sequence of primitives by indexing vertices and vertex attributes.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770510"></a><h2>NOTES</h2><p>
            <code class="function">glNormalPointer</code> is available only if the GL version is 1.1 or greater.
        </p><p>
            The normal array is initially disabled and isn't accessed when
            <span class="citerefentry"><span class="refentrytitle">glArrayElement</span></span>, <span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span>, or <span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span> is called.
        </p><p>
            Execution of <code class="function">glNormalPointer</code> is not allowed between
            <span class="citerefentry"><span class="refentrytitle">glBegin</span></span> and the corresponding <span class="citerefentry"><span class="refentrytitle">glEnd</span></span>,
            but an error may or may not be generated. If an error is not generated,
            the operation is undefined.
        </p><p>
            <code class="function">glNormalPointer</code> is typically implemented on the client side.
        </p><p>
            Since the normal array parameters are client-side state, they are not
            saved or restored by <span class="citerefentry"><span class="refentrytitle">glPushAttrib</span></span> and <span class="citerefentry"><span class="refentrytitle">glPopAttrib</span></span>.
            Use <span class="citerefentry"><span class="refentrytitle">glPushClientAttrib</span></span> and
            <span class="citerefentry"><span class="refentrytitle">glPopClientAttrib</span></span> instead.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770612"></a><h2>ERRORS</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>type</code></em> is not an accepted value.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>stride</code></em> is negative.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770644"></a><h2>ASSOCIATED GETS</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span> with argument <code class="constant">GL_NORMAL_ARRAY</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_NORMAL_ARRAY_TYPE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_NORMAL_ARRAY_STRIDE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGetPointerv</span></span> with argument <code class="constant">GL_NORMAL_ARRAY_POINTER</code>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770697"></a><h2>SEE ALSO</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glArrayElement</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glColorPointer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glEdgeFlagPointer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glEnable</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glGetPointerv</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glIndexPointer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glInterleavedArrays</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPopClientAttrib</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPushClientAttrib</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glSecondaryColorPointer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexCoordPointer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glVertexPointer</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770780"></a><h2>COPYRIGHT</h2><p>
            Copyright <span class="trademark"></span>© 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a href="http://oss.sgi.com/projects/FreeB/" target="_top">http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></body></html>
