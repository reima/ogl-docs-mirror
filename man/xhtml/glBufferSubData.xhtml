<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glBufferSubData</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glBufferSubData"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glBufferSubData — updates a subset of a buffer object's data store</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glBufferSubData</b>(</code></td><td><var class="pdparam">target</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">offset</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">size</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">data</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLenum  </td><td><var class="pdparam">target</var>;</td></tr><tr><td> GLintptr  </td><td><var class="pdparam">offset</var>;</td></tr><tr><td> GLsizeiptr  </td><td><var class="pdparam">size</var>;</td></tr><tr><td> const GLvoid *  </td><td><var class="pdparam">data</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4781640"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the target buffer object.
                    The symbolic constant must be <code class="constant">GL_ARRAY_BUFFER</code>, 
                    <code class="constant">GL_ELEMENT_ARRAY_BUFFER</code>,
                    <code class="constant">GL_PIXEL_PACK_BUFFER</code>, or
                    <code class="constant">GL_PIXEL_UNPACK_BUFFER</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>offset</code></em></span></dt><dd><p>
                    Specifies the offset into the buffer object's data store where data replacement will begin,
                    measured in bytes.
                </p></dd><dt><span class="term"><em class="parameter"><code>size</code></em></span></dt><dd><p>
                    Specifies the size in bytes of the data store region being replaced.
                </p></dd><dt><span class="term"><em class="parameter"><code>data</code></em></span></dt><dd><p>
                    Specifies a pointer to the new data that will be copied into the data store.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4768295"></a><h2>DESCRIPTION</h2><p>
            <code class="function">glBufferSubData</code> redefines some or all of the data store for the buffer object currently 
            bound to <em class="parameter"><code>target</code></em>. Data starting at byte offset <em class="parameter"><code>offset</code></em> and
            extending for <em class="parameter"><code>size</code></em> bytes is copied to the data store from the memory pointed to by
            <em class="parameter"><code>data</code></em>.  An error is thrown if <em class="parameter"><code>offset</code></em> and <em class="parameter"><code>size</code></em>
            together define a range beyond the bounds of the buffer object's data store.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4768356"></a><h2>NOTES</h2><p>
            <code class="function">glBufferSubData</code> is available only if the GL version is 1.5 or greater.
        </p><p>
            Targets <code class="constant">GL_PIXEL_PACK_BUFFER</code> and <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> are available 
            only if the GL version is 2.1 or greater.
        </p><p>
            When replacing the entire data store, consider using <code class="function">glBufferSubData</code> rather
            than completely recreating the data store with <code class="function">glBufferData</code>.  This avoids the cost of
            reallocating the data store.
        </p><p>
            Consider using multiple buffer objects to avoid stalling the rendering pipeline during data store updates.
            If any rendering in the pipeline makes reference to data in the buffer object being updated by 
            <code class="function">glBufferSubData</code>, especially from the specific region being updated, that rendering must 
            drain from the pipeline before the data store can be updated.
        </p><p>
            Clients must align data elements consistent with the requirements of the client
            platform, with an additional base-level requirement that an offset within a buffer to
            a datum comprising <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll"><mml:mi mathvariant="italic">N</mml:mi> be a 
            multiple of <mml:mi mathvariant="italic">N</mml:mi></mml:math>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775015"></a><h2>ERRORS</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not 
            <code class="constant">GL_ARRAY_BUFFER</code>, <code class="constant">GL_ELEMENT_ARRAY_BUFFER</code>, 
            <code class="constant">GL_PIXEL_PACK_BUFFER</code>, or <code class="constant">GL_PIXEL_UNPACK_BUFFER</code>.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>offset</code></em> or 
            <em class="parameter"><code>size</code></em> is negative, or if together they define a region of memory
            that extends beyond the buffer object's allocated data store.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if the reserved buffer object name 0 is bound to <em class="parameter"><code>target</code></em>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if the buffer object being updated is mapped.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glBufferSubData</code>
            is executed between the execution of
            <span class="citerefentry"><span class="refentrytitle">glBegin</span></span> and the corresponding execution of
            <span class="citerefentry"><span class="refentrytitle">glEnd</span></span>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775122"></a><h2>ASSOCIATED GETS</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glGetBufferSubData</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775136"></a><h2>SEE ALSO</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glBufferData</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glMapBuffer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glUnmapBuffer</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4775165"></a><h2>COPYRIGHT</h2><p>
            Copyright <span class="trademark"></span>© 2005
            by Sams Publishing.
        </p></div></div></body></html>
