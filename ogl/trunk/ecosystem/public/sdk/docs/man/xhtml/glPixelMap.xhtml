<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glPixelMap</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glPixelMap"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glPixelMap — set up pixel transfer maps</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glPixelMapfv</b>(</code></td><td><var class="pdparam">map</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">mapsize</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">values</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLenum  </td><td><var class="pdparam">map</var>;</td></tr><tr><td> GLsizei  </td><td><var class="pdparam">mapsize</var>;</td></tr><tr><td> const GLfloat *  </td><td><var class="pdparam">values</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glPixelMapuiv</b>(</code></td><td><var class="pdparam">map</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">mapsize</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">values</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLenum  </td><td><var class="pdparam">map</var>;</td></tr><tr><td> GLsizei  </td><td><var class="pdparam">mapsize</var>;</td></tr><tr><td> const GLuint *  </td><td><var class="pdparam">values</var>;</td></tr></table></div><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef"> void <b class="fsfunc">glPixelMapusv</b>(</code></td><td><var class="pdparam">map</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">mapsize</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">values</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td> GLenum  </td><td><var class="pdparam">map</var>;</td></tr><tr><td> GLsizei  </td><td><var class="pdparam">mapsize</var>;</td></tr><tr><td> const GLushort *  </td><td><var class="pdparam">values</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4768250"></a><h2>PARAMETERS</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>map</code></em></span></dt><dd><p>
                    Specifies a symbolic map name.
                    Must be one of the following:
                    <code class="constant">GL_PIXEL_MAP_I_TO_I</code>,
                    <code class="constant">GL_PIXEL_MAP_S_TO_S</code>,
                    <code class="constant">GL_PIXEL_MAP_I_TO_R</code>,
                    <code class="constant">GL_PIXEL_MAP_I_TO_G</code>,
                    <code class="constant">GL_PIXEL_MAP_I_TO_B</code>,
                    <code class="constant">GL_PIXEL_MAP_I_TO_A</code>,
                    <code class="constant">GL_PIXEL_MAP_R_TO_R</code>,
                    <code class="constant">GL_PIXEL_MAP_G_TO_G</code>,
                    <code class="constant">GL_PIXEL_MAP_B_TO_B</code>, or
                    <code class="constant">GL_PIXEL_MAP_A_TO_A</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>mapsize</code></em></span></dt><dd><p>
                    Specifies the size of the map being defined.
                </p></dd><dt><span class="term"><em class="parameter"><code>values</code></em></span></dt><dd><p>
                    Specifies an array of <em class="parameter"><code>mapsize</code></em> values.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4768365"></a><h2>DESCRIPTION</h2><p>
            <code class="function">glPixelMap</code> sets up translation tables,
            or <span class="emphasis"><em>maps</em></span>,
            used by
            <span class="citerefentry"><span class="refentrytitle">glCopyPixels</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage3D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glDrawPixels</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glReadPixels</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage3D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexSubImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexSubImage2D</span></span>, and
            <span class="citerefentry"><span class="refentrytitle">glTexSubImage3D</span></span>.
            Additionally, if the <code class="code">ARB_imaging</code> subset is supported, the
            routines
            <span class="citerefentry"><span class="refentrytitle">glColorTable</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glColorSubTable</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glConvolutionFilter1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glConvolutionFilter2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glHistogram</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glMinmax</span></span>, and
            <span class="citerefentry"><span class="refentrytitle">glSeparableFilter2D</span></span>.
            Use of these maps is described completely in the
            <span class="citerefentry"><span class="refentrytitle">glPixelTransfer</span></span> reference page,
            and partly in the reference pages for the pixel and texture image commands.
            Only the specification of the maps is described in this reference page.
        </p><p>
            <em class="parameter"><code>map</code></em> is a symbolic map name,
            indicating one of ten maps to set.
            <em class="parameter"><code>mapsize</code></em> specifies the number of entries in the map,
            and <em class="parameter"><code>values</code></em> is a pointer to an array of <em class="parameter"><code>mapsize</code></em> map values.
        </p><p>
            If a non-zero named buffer object is bound to the <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target 
            (see <span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span>) while a pixel transfer map is
            specified, <em class="parameter"><code>values</code></em> is treated as a byte offset into the buffer object's data store.
        </p><p>
            The ten maps are as follows:
        </p><div class="variablelist"><dl><dt><span class="term"><code class="constant">GL_PIXEL_MAP_I_TO_I</code></span></dt><dd><p>
                        Maps color indices to color indices.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_S_TO_S</code></span></dt><dd><p>
                        Maps stencil indices to stencil indices.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_I_TO_R</code></span></dt><dd><p>
                        Maps color indices to red components.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_I_TO_G</code></span></dt><dd><p>
                        Maps color indices to green components.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_I_TO_B</code></span></dt><dd><p>
                        Maps color indices to blue components.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_I_TO_A</code></span></dt><dd><p>
                        Maps color indices to alpha components.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_R_TO_R</code></span></dt><dd><p>
                        Maps red components to red components.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_G_TO_G</code></span></dt><dd><p>
                        Maps green components to green components.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_B_TO_B</code></span></dt><dd><p>
                        Maps blue components to blue components.
                    </p></dd><dt><span class="term"><code class="constant">GL_PIXEL_MAP_A_TO_A</code></span></dt><dd><p>
                        Maps alpha components to alpha components.
                    </p></dd></dl></div><p>
            The entries in a map can be specified as single-precision
            floating-point numbers,
            unsigned short integers,
            or unsigned int integers.
            Maps that store color component values
            (all but <code class="constant">GL_PIXEL_MAP_I_TO_I</code> and <code class="constant">GL_PIXEL_MAP_S_TO_S</code>)
            retain their values in floating-point format,
            with unspecified mantissa and exponent sizes.
            Floating-point values specified by <code class="function">glPixelMapfv</code> are converted directly
            to the internal floating-point format of these maps,
            then clamped to the range [0,1].
            Unsigned integer values specified by <code class="function">glPixelMapusv</code> and
            <code class="function">glPixelMapuiv</code> are converted linearly such that
            the largest representable integer maps to 1.0,
            and 0 maps to 0.0.
        </p><p>
            Maps that store indices,
            <code class="constant">GL_PIXEL_MAP_I_TO_I</code> and <code class="constant">GL_PIXEL_MAP_S_TO_S</code>,
            retain their values in fixed-point format,
            with an unspecified number of bits to the right of the binary point.
            Floating-point values specified by <code class="function">glPixelMapfv</code> are converted directly
            to the internal fixed-point format of these maps.
            Unsigned integer values specified by <code class="function">glPixelMapusv</code> and
            <code class="function">glPixelMapuiv</code> specify integer values,
            with all 0's to the right of the binary point.
        </p><p>
            The following table shows the initial sizes and values for each of the maps.
            Maps that are indexed by either color or stencil indices must have
            <em class="parameter"><code>mapsize</code></em> = 
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:msup><mml:mn>2</mml:mn>
                <mml:mi mathvariant="italic">n</mml:mi>
                </mml:msup>
            </mml:math>
            for some 
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll"><mml:mi mathvariant="italic">n</mml:mi></mml:math>
            or the results are undefined.
            The maximum allowable size for each map depends on the implementation
            and can be determined by calling <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument
            <code class="constant">GL_MAX_PIXEL_MAP_TABLE</code>.
            The single maximum applies to all maps; it is at
            least 32.
        </p><div class="informaltable"><table border="1"><colgroup><col align="left" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /></colgroup><thead><tr><th align="left"><span class="bold"><strong>
                        <em class="parameter"><code>map</code></em>
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Lookup Index
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Lookup Value
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Initial Size
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Initial Value
                        </strong></span></th></tr></thead><tbody><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_I_TO_I</code>
                        </td><td align="center">
                        color index
                        </td><td align="center">
                        color index
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_S_TO_S</code>
                        </td><td align="center">
                        stencil index 
                        </td><td align="center">
                        stencil index 
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_I_TO_R</code>
                        </td><td align="center">
                        color index 
                        </td><td align="center">
                        R
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_I_TO_G</code>
                        </td><td align="center">
                        color index 
                        </td><td align="center">
                        G
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_I_TO_B</code>
                        </td><td align="center">
                        color index
                        </td><td align="center">
                        B
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_I_TO_A</code>
                        </td><td align="center">
                        color index
                        </td><td align="center">
                        A
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_R_TO_R</code>
                        </td><td align="center">
                        R
                        </td><td align="center">
                        R
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_G_TO_G</code>
                        </td><td align="center">
                        G
                        </td><td align="center">
                        G
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_B_TO_B</code>
                        </td><td align="center">
                        B
                        </td><td align="center">
                        B
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_PIXEL_MAP_A_TO_A</code>
                        </td><td align="center">
                        A
                        </td><td align="center">
                        A
                        </td><td align="center">
                        1
                        </td><td align="center">
                        0
                        </td></tr></tbody></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4711221"></a><h2>ERRORS</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>map</code></em> is not an accepted value.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>mapsize</code></em> is less than one
            or larger than <code class="constant">GL_MAX_PIXEL_MAP_TABLE</code>.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>map</code></em> is
            <code class="constant">GL_PIXEL_MAP_I_TO_I</code>,
            <code class="constant">GL_PIXEL_MAP_S_TO_S</code>,
            <code class="constant">GL_PIXEL_MAP_I_TO_R</code>,
            <code class="constant">GL_PIXEL_MAP_I_TO_G</code>,
            <code class="constant">GL_PIXEL_MAP_I_TO_B</code>, or
            <code class="constant">GL_PIXEL_MAP_I_TO_A</code>,
            and <em class="parameter"><code>mapsize</code></em> is not a power of two.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target and the buffer object's data store is currently mapped.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target and the data would be unpacked from the buffer 
            object such that the memory reads required would exceed the data store size.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated by <code class="function">glPixelMapfv</code> if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target and <em class="parameter"><code>values</code></em> is not evenly divisible 
            into the number of bytes needed to store in memory a GLfloat datum.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated by <code class="function">glPixelMapuiv</code> if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target and <em class="parameter"><code>values</code></em> is not evenly divisible 
            into the number of bytes needed to store in memory a GLuint datum.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated by <code class="function">glPixelMapusv</code> if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target and <em class="parameter"><code>values</code></em> is not evenly divisible 
            into the number of bytes needed to store in memory a GLushort datum.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glPixelMap</code>
            is executed between the execution of <span class="citerefentry"><span class="refentrytitle">glBegin</span></span>
            and the corresponding execution of <span class="citerefentry"><span class="refentrytitle">glEnd</span></span>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4711451"></a><h2>ASSOCIATED GETS</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glGetPixelMap</span></span>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_I_TO_I_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_S_TO_S_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_I_TO_R_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_I_TO_G_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_I_TO_B_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_I_TO_A_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_R_TO_R_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_G_TO_G_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_B_TO_B_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_MAP_A_TO_A_SIZE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_MAX_PIXEL_MAP_TABLE</code>
        </p><p>
            <span class="citerefentry"><span class="refentrytitle">glGet</span></span> with argument <code class="constant">GL_PIXEL_UNPACK_BUFFER_BINDING</code>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4711607"></a><h2>SEE ALSO</h2><p>
            <span class="citerefentry"><span class="refentrytitle">glColorTable</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glColorSubTable</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glConvolutionFilter1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glConvolutionFilter2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyPixels</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glDrawPixels</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glHistogram</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glMinmax</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPixelStore</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glPixelTransfer</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glReadPixels</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glSeparableFilter2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexImage3D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexSubImage1D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexSubImage2D</span></span>,
            <span class="citerefentry"><span class="refentrytitle">glTexSubImage3D</span></span>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4784707"></a><h2>COPYRIGHT</h2><p>
            Copyright <span class="trademark"></span>© 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a href="http://oss.sgi.com/projects/FreeB/" target="_top">http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></body></html>
