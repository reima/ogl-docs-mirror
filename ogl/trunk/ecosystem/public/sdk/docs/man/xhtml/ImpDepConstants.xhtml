<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ImpDepConstants</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="ImpDepConstants"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>ImpDepConstants â€” Describes Implementation-Dependent API Values for GLSL</p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4706516"></a><h2>Description</h2><p>A number of new implementation-dependent values have been
	defined in OpenGL 2.0 to support the requirements of the OpenGL
	Shading Language. Each of these values can be queried by calling
	one of the variants of
	<span class="citerefentry"><span class="refentrytitle">glGet</span></span>.</p><div class="variablelist"><dl><dt><span class="term"><code class="constant">GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS</code></span></dt><dd><p> Defines the total number of hardware units
		    that can be used to access texture maps from the
		    vertex processor and the fragment processor
		    combined. The minimum legal value is 2.</p></dd><dt><span class="term"><code class="constant">GL_MAX_DRAW_BUFFERS</code></span></dt><dd><p> Defines the maximum number of buffers that
		    can be simultaneously written into from within a
		    fragment shader using the special output variable
		    array <code class="code">gl_FragData</code>. This
		    constant effectively defines the size of the
		    <code class="code">gl_FragData</code> array.</p></dd><dt><span class="term"><code class="constant">GL_MAX_FRAGMENT_UNIFORM_COMPONENTS</code></span></dt><dd><p> Defines the number of components (i.e.,
		    floating-point values) that are available for
		    fragment shader uniform variables. The minimum legal
		    value is 64.</p></dd><dt><span class="term"><code class="constant">GL_MAX_TEXTURE_COORDS</code></span></dt><dd><p> Defines the number of texture coordinate sets
		    that are available. The minimum legal value is
		    2.</p></dd><dt><span class="term"><code class="constant">GL_MAX_TEXTURE_IMAGE_UNITS</code></span></dt><dd><p> Defines the total number of hardware units
		    that can be used to access texture maps from the
		    fragment processor. The minimum legal value is
		    2.</p></dd><dt><span class="term"><code class="constant">GL_MAX_VARYING_FLOATS</code></span></dt><dd><p> Defines the number of floating-point
		    variables avalable for varying variables. The
		    minimum legal value is 32.</p></dd><dt><span class="term"><code class="constant">GL_MAX_VERTEX_ATTRIBS</code></span></dt><dd><p> Defines the number of active vertex
		    attributes that are available. The minimum legal
		    value is 16.</p></dd><dt><span class="term"><code class="constant">GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS</code></span></dt><dd><p> Defines the number of hardware units that can
		    be used to access texture maps from the vertex
		    processor. The minimum legal value is 0.</p></dd><dt><span class="term"><code class="constant">GL_MAX_VERTEX_UNIFORM_COMPONENTS</code></span></dt><dd><p> Defines the number of components (i.e.,
		    floating-point values) that are available for vertex
		    shader uniform variables. The minimum legal value is
		    512.</p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4763857"></a><h2>Other Queryable Values for GLSL</h2><div class="variablelist"><dl><dt><span class="term"><code class="constant">GL_CURRENT_PROGRAM</code></span></dt><dd><p> Contains the name of the program object that
		    is currently installed as part of current state. If
		    no program object is active, this value will be 0.
		    This value can be obtained by calling one of the
		    variants of
		    <span class="citerefentry"><span class="refentrytitle">glGet</span></span>.</p></dd><dt><span class="term"><code class="constant">GL_SHADING_LANGUAGE_VERSION</code></span></dt><dd><p> Contains the OpenGL Shading Language version
		    that is supported by the implementation. It is
		    organized as a dot-delimited sequence of multi-digit
		    integers. This value can be obtained by calling
		    <span class="citerefentry"><span class="refentrytitle">glGetString</span></span></p></dd></dl></div></div></div></body></html>
