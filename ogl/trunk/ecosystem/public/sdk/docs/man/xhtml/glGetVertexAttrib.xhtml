<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glGetVertexAttrib</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1" /></head><body><div class="refentry" lang="en" xml:lang="en"><a id="glGetVertexAttrib"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetVertexAttrib — Return a generic vertex attribute parameter</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef">void <b class="fsfunc">glGetVertexAttribdv</b>(</code></td><td><var class="pdparam">index</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">pname</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">params</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td>GLuint  </td><td><var class="pdparam">index</var>;</td></tr><tr><td>GLenum  </td><td><var class="pdparam">pname</var>;</td></tr><tr><td>GLdouble * </td><td><var class="pdparam">params</var>;</td></tr></table><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef">void <b class="fsfunc">glGetVertexAttribfv</b>(</code></td><td><var class="pdparam">index</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">pname</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">params</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td>GLuint  </td><td><var class="pdparam">index</var>;</td></tr><tr><td>GLenum  </td><td><var class="pdparam">pname</var>;</td></tr><tr><td>GLfloat * </td><td><var class="pdparam">params</var>;</td></tr></table><table border="0" summary="Function synopsis" cellspacing="0" cellpadding="0" style="padding-bottom: 1em"><tr><td><code class="funcdef">void <b class="fsfunc">glGetVertexAttribiv</b>(</code></td><td><var class="pdparam">index</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">pname</var>, </td><td> </td></tr><tr><td> </td><td><var class="pdparam">params</var><code>)</code>;</td><td> </td></tr></table><table border="0" summary="Function argument synopsis" cellspacing="0" cellpadding="0"><tr><td>GLuint  </td><td><var class="pdparam">index</var>;</td></tr><tr><td>GLenum  </td><td><var class="pdparam">pname</var>;</td></tr><tr><td>GLint * </td><td><var class="pdparam">params</var>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4777233"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>index</code></em></span></dt><dd><p>Specifies the generic vertex attribute
		    parameter to be queried.</p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>Specifies the symbolic name of the vertex
		    attribute parameter to be queried.
		    <code class="constant">GL_VERTEX_ATTRIB_ARRAY_ENABLED</code>,
		    <code class="constant">GL_VERTEX_ATTRIB_ARRAY_SIZE</code>,
		    <code class="constant">GL_VERTEX_ATTRIB_ARRAY_STRIDE</code>,
		    <code class="constant">GL_VERTEX_ATTRIB_ARRAY_TYPE</code>,
		    <code class="constant">GL_VERTEX_ATTRIB_ARRAY_NORMALIZED</code>,
		    <code class="constant">GL_CURRENT_VERTEX_ATTRIB</code>
		    are accepted.</p></dd><dt><span class="term"><em class="parameter"><code>params</code></em></span></dt><dd><p>Returns the requested data.</p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4763864"></a><h2>Description</h2><p><code class="function">glGetVertexAttrib</code> returns in
	<code class="constant">params</code> the value of a generic vertex
	attribute parameter. The generic vertex attribute to be queried
	is specified by <em class="parameter"><code>index</code></em>, and the parameter
	to be queried is specified by <em class="parameter"><code>pname</code></em>.</p><p>The accepted parameter names are as follows:</p><div class="variablelist"><dl><dt><span class="term"><code class="constant">GL_VERTEX_ATTRIB_ARRAY_ENABLED</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns a
		    single value that is non-zero (true) if the vertex
		    attribute array for <em class="parameter"><code>index</code></em> is
		    enabled and 0 (false) if it is disabled. The initial
		    value is <code class="constant">GL_FALSE</code>.</p></dd><dt><span class="term"><code class="constant">GL_VERTEX_ATTRIB_ARRAY_SIZE</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns a
		    single value, the size of the vertex attribute array
		    for <em class="parameter"><code>index</code></em>. The size is the
		    number of values for each element of the vertex
		    attribute array, and it will be 1, 2, 3, or 4. The
		    initial value is 4.</p></dd><dt><span class="term"><code class="constant">GL_VERTEX_ATTRIB_ARRAY_STRIDE</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns a
		    single value, the array stride for (number of bytes
		    between successive elements in) the vertex attribute
		    array for <em class="parameter"><code>index</code></em>. A value of 0
		    indicates that the array elements are stored
		    sequentially in memory. The initial value is 0.</p></dd><dt><span class="term"><code class="constant">GL_VERTEX_ATTRIB_ARRAY_TYPE</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns a
		    single value, a symbolic constant indicating the
		    array type for the vertex attribute array for
		    <em class="parameter"><code>index</code></em>. Possible values are
		    <code class="constant">GL_BYTE</code>,
		    <code class="constant">GL_UNSIGNED_BYTE</code>,
		    <code class="constant">GL_SHORT</code>,
		    <code class="constant">GL_UNSIGNED_SHORT</code>,
		    <code class="constant">GL_INT</code>,
		    <code class="constant">GL_UNSIGNED_INT</code>,
		    <code class="constant">GL_FLOAT</code>, and
		    <code class="constant">GL_DOUBLE</code>. The initial value is
		    <code class="constant">GL_FLOAT</code>.</p></dd><dt><span class="term"><code class="constant">GL_VERTEX_ATTRIB_ARRAY_NORMALIZED</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns a
		    single value that is non-zero (true) if fixed-point
		    data types for the vertex attribute array indicated
		    by <em class="parameter"><code>index</code></em> are normalized when
		    they are converted to floating point, and 0 (false)
		    otherwise. The initial value is
		    <code class="constant">GL_FALSE</code>.</p></dd><dt><span class="term"><code class="constant">GL_CURRENT_VERTEX_ATTRIB</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns four
		    values that represent the current value for the
		    generic vertex attribute specified by index. Generic
		    vertex attribute 0 is unique in that it has no
		    current state, so an error will be generated if
		    <em class="parameter"><code>index</code></em> is 0. The initial value
		    for all other generic vertex attributes is
		    (0,0,0,1).</p><p>All of the parameters except
		    <code class="constant">GL_CURRENT_VERTEX_ATTRIB</code>
		    represent client-side state.</p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770708"></a><h2>Notes</h2><p><code class="function">glGetVertexAttrib</code> is available only
	if the GL version is 2.0 or greater.</p><p>If an error is generated, no change is made to the
	contents of <em class="parameter"><code>params</code></em>.</p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770735"></a><h2>Errors</h2><p><code class="constant">GL_INVALID_VALUE</code> is generated if
	<em class="parameter"><code>index</code></em> is greater than or equal to
	<code class="constant">GL_MAX_VERTEX_ATTRIBS</code>.</p><p><code class="constant">GL_INVALID_ENUM</code> is generated if
	<em class="parameter"><code>pname</code></em> is not an accepted value.</p><p><code class="constant">GL_INVALID_OPERATION</code> is generated if
	<em class="parameter"><code>index</code></em> is 0 and
	<em class="parameter"><code>pname</code></em> is
	<code class="constant">GL_CURRENT_VERTEX_ATTRIB</code>.</p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770794"></a><h2>Associated Gets</h2><p><span class="citerefentry"><span class="refentrytitle">glGet</span></span>
	with argument <code class="constant">GL_MAX_VERTEX_ATTRIBS</code></p><p><span class="citerefentry"><span class="refentrytitle">glGetVertexAttribPointer</span></span>
	with arguments <em class="parameter"><code>index</code></em> and
	<code class="constant">GL_VERTEX_ATTRIB_ARRAY_POINTER</code></p></div><div class="refsect1" lang="en" xml:lang="en"><a id="id4770826"></a><h2>See Also</h2><p><span class="citerefentry"><span class="refentrytitle">glBindAttribLocation</span></span>,
	<span class="citerefentry"><span class="refentrytitle">glDisableVertexAttribArray</span></span>,
	<span class="citerefentry"><span class="refentrytitle">glEnableVertexAttribArray</span></span>,
	<span class="citerefentry"><span class="refentrytitle">glVertexAttrib</span></span>,
	<span class="citerefentry"><span class="refentrytitle">glVertexAttribPointer</span></span></p></div></div></body></html>
